--- a/numpy/distutils/tests/test_system_info.py
+++ b/numpy/distutils/tests/test_system_info.py
@@ -220,6 +220,7 @@ class TestSystemInfoReading:
         assert_equal(tsi.get_libs("libraries", [self._lib2]), [self._lib2])
 
     @pytest.mark.skipif(not HAVE_COMPILER, reason="Missing compiler")
+    @pytest.mark.skip(reason="Debian: disabled as we cant properly compile")
     def test_compile1(self):
         # Compile source and link the first source
         c = customized_ccompiler()
@@ -237,6 +238,7 @@ class TestSystemInfoReading:
     @pytest.mark.skipif(not HAVE_COMPILER, reason="Missing compiler")
     @pytest.mark.skipif('msvc' in repr(ccompiler.new_compiler()),
                          reason="Fails with MSVC compiler ")
+    @pytest.mark.skip(reason="Debian: disabled as we cant properly compile")
     def test_compile2(self):
         # Compile source and link the second source
         tsi = self.c_temp2
--- a/numpy/tests/test_reloading.py
+++ b/numpy/tests/test_reloading.py
@@ -44,6 +44,7 @@ def test_novalue():
                                           protocol=proto)) is np._NoValue)
 
 
+@pytest.mark.skip(reason="Debian: disabled it runs in a separate process, picking up the system-wide module")
 @pytest.mark.skipif(IS_WASM, reason="can't start subprocess")
 def test_full_reimport():
     """At the time of writing this, it is *not* truly supported, but
